name: Render Computo Article

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
  workflow_dispatch:  # allows manual triggering

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Quarto
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: 1.8.25

      # 3. Install TinyTeX (for PDF rendering)
      - name: Install TinyTeX manually
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          quarto install tool tinytex --no-prompt || true
          wget -qO- "https://yihui.org/tinytex/install-bin-unix.sh" | sh

      # 4. Add TinyTeX to PATH
      - name: Add TinyTeX to PATH
        run: echo "$HOME/.TinyTeX/bin/x86_64-linux" >> $GITHUB_PATH

      # 5. Install R packages if needed (optional)
      # You can skip if packages are already installed in your project
      - name: Setup R packages
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3'

      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("remotes"), repos="https://cloud.r-project.org")'
          Rscript -e 'remotes::install_github("iandanilevicz/sPLSDRtuning")'
          Rscript -e 'install.packages(c("survcomp","mixOmics","plsRcox","Coxmos","simsurv","caret"), repos="https://cloud.r-project.org")'

      # 6. Render Quarto HTML
      - name: Render HTML
        run: quarto render your_article.qmd --to html

      # 7. Render Quarto PDF
      - name: Render PDF
        run: quarto render your_article.qmd --to pdf

      # 8. Optionally upload artifacts
      - name: Upload rendered files
        uses: actions/upload-artifact@v3
        with:
          name: rendered-files
          path: |
            _book/
            your_article.pdf
